Testing Composer.VERSION = 0.4.4
================
Partial: [_a-z][_a-z0-9]*
Composed: /^([_a-z][_a-z0-9]*|\*\*aabb\*\*|.|\s|\D+)*?$/i
Expected: /^([_a-z][_a-z0-9]*|\*\*aabb\*\*|.|\s|\D+)*?$/i
================

Testing Analyzer.VERSION = 0.4.4
================
Input: /xyz([abc0-9]){2,3}/i

Regular Expression: xyz([abc0-9]){2,3}

Regular Expression Flags: 
{ i: 1 }

Regular Expression Parts: 
{
    "part": [
        {
            "part": "xyz",
            "flags": {},
            "typeName": "String",
            "type": 11
        },
        {
            "part": {
                "part": {
                    "part": [
                        {
                            "part": [
                                {
                                    "part": [
                                        "a",
                                        "b",
                                        "c"
                                    ],
                                    "flags": {},
                                    "typeName": "Chars",
                                    "type": 9
                                },
                                {
                                    "part": [
                                        "0",
                                        "9"
                                    ],
                                    "flags": {},
                                    "typeName": "CharRange",
                                    "type": 10
                                }
                            ],
                            "flags": {},
                            "typeName": "CharGroup",
                            "type": 8
                        }
                    ],
                    "flags": {},
                    "typeName": "Sequence",
                    "type": 1
                },
                "flags": {
                    "GroupIndex": 1
                },
                "typeName": "Group",
                "type": 3
            },
            "flags": {
                "part": "{2,3}",
                "MatchMinimum": "2",
                "MatchMaximum": "3",
                "StartRepeats": 1,
                "isGreedy": 1
            },
            "typeName": "Quantifier",
            "type": 4
        }
    ],
    "flags": {},
    "typeName": "Sequence",
    "type": 1
}

Regular Expression Peek Characters: 
{
    "peek": {
        "x": 1,
        "X": 1
    },
    "negativepeek": {}
}

Regular Expression Sample Match String: 
XYZ07 -> Matched
================

