Testing Composer.VERSION = 0.4.5
================
Partial: [_a-z][_a-z0-9]*
Composed: /^([_a-z][_a-z0-9]*|\*\*aabb\*\*|.|\s|\D+)*?$/i
Expected: /^([_a-z][_a-z0-9]*|\*\*aabb\*\*|.|\s|\D+)*?$/i
================

Testing Analyzer.VERSION = 0.5.0
=========================================
Input                                   : /xyz([abc0-9]){2,3}/i
Regular Expression                      : xyz([abc0-9]){2,3}
Regular Expression Flags                : i
=========================================
Regular Expression Syntax Tree          : 
{
    "type": "Sequence",
    "value": [
        {
            "type": "String",
            "value": "xyz",
            "flags": {}
        },
        {
            "type": "Quantifier",
            "value": {
                "type": "Group",
                "value": {
                    "type": "Sequence",
                    "value": [
                        {
                            "type": "CharacterGroup",
                            "value": [
                                {
                                    "type": "Characters",
                                    "value": [
                                        "a",
                                        "b",
                                        "c"
                                    ],
                                    "flags": {}
                                },
                                {
                                    "type": "CharacterRange",
                                    "value": [
                                        "0",
                                        "9"
                                    ],
                                    "flags": {}
                                }
                            ],
                            "flags": {}
                        }
                    ],
                    "flags": {}
                },
                "flags": {
                    "GroupIndex": 1
                }
            },
            "flags": {
                "val": "{2,3}",
                "MatchMinimum": "2",
                "MatchMaximum": "3",
                "StartRepeats": 1,
                "isGreedy": 1
            }
        }
    ],
    "flags": {}
}
=========================================
Regular Expression Peek Characters      : 
{
    "positive": [
        "x",
        "X"
    ],
    "negative": []
}
=========================================
Regular Expression Minimum Length       : 
5
=========================================
Regular Expression Sample Match Strings : 
[
    {
        "sample": "XYZb8",
        "match": "yes"
    },
    {
        "sample": "xyzA3",
        "match": "yes"
    },
    {
        "sample": "xyz9C",
        "match": "yes"
    },
    {
        "sample": "xyzAB",
        "match": "yes"
    },
    {
        "sample": "XYZAb",
        "match": "yes"
    }
]
=========================================
